<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Carte des Restaurants</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        body, html {
            height: 100%;
            margin: 0;
            display: flex;
            flex-direction: column;
        }
        .content {
            flex: 1;
            padding-top: 70px; /* Adjust this value if needed */
        }
        #map {
            height: 600px;
            width: 100%;
        }
        .no-results {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: rgba(255, 255, 255, 0.8);
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            font-size: 1.5em;
            z-index: 1000;
        }
        footer {
            background-color: #f8f9fa;
            padding: 20px 0;
            text-align: center;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light fixed-top">
        <a class="navbar-brand" href="?page=accueil">LyonEats</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" href="?page=accueil">Accueil</a>
                </li>
                <li class="nav-item active">
                    <a class="nav-link" href="?page=recherche">Chercher <span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="?page=contact">Contact</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="?page=deconnexion">Déconnexion</a>
                </li>
            </ul>
        </div>
    </nav>

    <div class="container content mt-4">
        <h1>Carte des Restaurants de Lyon</h1>
        <form method="get" action="?page=recherche">
            <div class="form-group">
                <input type="hidden" name="page" value="recherche">
                <input type="text" class="form-control" name="search" placeholder="Rechercher un restaurant" value="{{ search_query }}">
            </div>
            <button type="submit" class="btn btn-primary">Rechercher</button>
        </form>
        <div id="map" class="mt-4"></div>
        {% if no_results %}
            <div class="no-results">Aucun résultat trouvé</div>
        {% endif %}
    </div>

    <footer>
        <div class="container">
            <p>&copy; 2023 LyonEats. Tous droits réservés.</p>
        </div>
    </footer>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        var map = L.map('map').setView([45.75, 4.85], 13);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        var allRestaurants = JSON.parse('{{ restaurants|json_encode|e('js') }}');
        var markers = [];

        function updateMarkers() {
            // Clear existing markers
            markers.forEach(function(marker) {
                map.removeLayer(marker);
            });
            markers = [];

            // Get the current bounds of the map
            var bounds = map.getBounds();

            // Filter restaurants within the bounds
            var visibleRestaurants = allRestaurants.filter(function(restaurant) {
                return bounds.contains([restaurant.latitude, restaurant.longitude]);
            });

            // Limit to 50 restaurants
            visibleRestaurants = visibleRestaurants.slice(0, 50);

            // Add markers for visible restaurants
            visibleRestaurants.forEach(function(restaurant) {
                var marker = L.marker([restaurant.latitude, restaurant.longitude])
                    .addTo(map)
                    .bindPopup(`<strong>${restaurant.name}</strong><br><a href="?page=details&id=${restaurant.id}">Détails</a>`);
                markers.push(marker);
            });
        }

        // Update markers when the map is moved or zoomed
        map.on('moveend', updateMarkers);

        // Initial marker update
        updateMarkers();
    </script>
</body>
</html>